#!/bin/bash

set -e

ARCH="${1:-amd64}"

P="dynamorio-10.0.19748"
PV="10.0.19748"
RUYI_DATESTAMP=20240128

case "$ARCH" in
amd64|arm64|riscv64)
	;;
*)
	echo "invalid ARCH: choices are amd64 (default), arm64 or riscv64" >&2
	exit 1
	;;
esac

OUT_P="dynamorio-riscv-$PV.ruyi-$RUYI_DATESTAMP"
INSTALL_ROOT="/tmp/prefix/$OUT_P"

pushd /tmp
    git clone --depth 1 --recurse-submodules -j4 https://github.com/DynamoRIO/dynamorio.git -b "cronbuild-${PV}"
popd

SRC_DIR="/tmp/dynamorio"

CONFIG_ARGS=(
    -G Ninja
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX="$INSTALL_ROOT"
    -DBUILD_TOOLS=ON
    -DBUILD_SAMPLES=ON
    -DBUILD_TESTS=OFF
    -DTARGET_ARCH=riscv64
    -DDISABLE_WARNINGS=ON  # indeed -Werror has to be disabled
)

case "$ARCH" in
arm64)
    CONFIG_ARGS+=(
        -DCMAKE_TOOLCHAIN_FILE="$SRC_DIR/make/toolchain-aarch64.cmake"
        -DCMAKE_FIND_ROOT_PATH=/sysroot/arm64
    )
    ;;
riscv64)
    CONFIG_ARGS+=(
        -DCMAKE_TOOLCHAIN_FILE="$SRC_DIR/make/toolchain-riscv64.cmake"
        -DCMAKE_FIND_ROOT_PATH=/sysroot/riscv64

        # libsnappy and liblz4 is missing static libraries so the linker gets
        # passed bare -lfoo flags, without sysroot
        -DCMAKE_SYSROOT_LINK=/sysroot/riscv64

        # XXX: force static linking of libpthread and libdl
        # fails to build otherwise: errors about undefined e.g. _dl_stack_flags from inside nptl
        # https://stackoverflow.com/questions/5738000/undefined-reference-error-dl-stack-flags-with-gcc-and-pthreads
        -Dlibdl:FILEPATH=/sysroot/riscv64/usr/lib/riscv64-linux-gnu/libdl.so.2
        -Dlibpthread:FILEPATH=/sysroot/riscv64/usr/lib/riscv64-linux-gnu/libpthread.so.0
    )
    ;;
esac

# Workaround faulty cross sysroot layout
# FIXME: remove after next builder image bump
mkdir /sysroot
mv /usr/riscv64-linux-gnu /sysroot/riscv64
mv /usr/riscv64-linux-gnu.orig /usr/riscv64-linux-gnu

# TODO: linking fails for now, turns out these are optional
rm /sysroot/riscv64/usr/lib/riscv64-linux-gnu/liblz4.*
rm /sysroot/riscv64/usr/lib/riscv64-linux-gnu/libsnappy.*

# have to patch the upstream-provided toolchain file to point to our complete
# sysroot
pushd "$SRC_DIR"/make
    sed -i 's@CMAKE_FIND_ROOT_PATH "/usr/riscv64-\${TARGET_ABI}"@CMAKE_FIND_ROOT_PATH "/sysroot/riscv64"@' toolchain-riscv64.cmake
popd

mkdir /tmp/build
pushd /tmp/build
    cmake "$SRC_DIR" "${CONFIG_ARGS[@]}"
    ninja install
popd

pushd "$INSTALL_ROOT"
    mv bin64 bin
    ln -s bin bin64
popd

pushd "/tmp/prefix"
    tar --zstd -cvf "/out/$OUT_P.$ARCH.tar.zst" \
        "$OUT_P"
popd
